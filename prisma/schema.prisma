generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Watchlist {
    id          String    @id @default(cuid())
    title       String
    description String?
    rating      Float?
    date        DateTime? @db.Date
    imdbId      String?   @unique
    tmdbId      Int       @unique
    poster      String?
    posterBlur  String?
    type        Type
    status      Status    @default(PENDING)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    genres      Int[]
}

model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    access_token             String?
    expires_at               Int?
    refresh_token_expires_in Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum Type {
    MOVIE
    SERIES
}

enum Status {
    UPCOMING
    PENDING
    WATCHING
    UNFINISHED
    FINISHED
}
